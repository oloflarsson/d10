{"version":3,"sources":["DiceUtil.js","LocalStorageAccessor.js","App.js","serviceWorker.js","index.js"],"names":["getSuccessesSingle","again","rote","value","Math","ceil","random","successes","getSuccesses","dices","index","getExpectedSingle","Error","againArea","onlyArea","getExpected","getChance","pow","LocalStorageAccessor","key","initialValue","this","JSON","stringify","parse","json","window","localStorage","getItem","undefined","getInitial","error","setItem","STARTING_ROLL_ENABLED","STARTING_WILLPOWER_ENABLED","STORAGE","rollEnabled","willpowerEnabled","willpowerSuccesses","presets","getChanceDescription","chance","round","getExpectedDescription","expected","App","state","get","edit","editState","setState","saveState","editPreset","presetState","presetsAfter","map","preset","id","Object","assign","addPreset","removePreset","filter","set","handleDicesChanged","event","target","handleAgainChanged","handleRoteChanged","checked","handleClear","handleRoll","targetSuccesses","DiceUtil","handleWillpower","additionalSuccesses","handlePresetAdd","Date","now","name","handlePresetEdit","handlePresetLoad","chanceDescription","expectedDescription","tooltipChance","tooltipExpected","className","title","type","min","onChange","max","onClick","disabled","presetChance","presetExpected","presetChanceDescription","presetExpectedDescription","tooltipPreset","handleBlur","e","onKeyDown","onBlur","autoFocus","onContextMenu","preventDefault","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6d8aa30a.chunk.js","sourcesContent":["export const getValue = () => {\n  return Math.ceil(Math.random() * 10);\n};\n\nexport const getSuccessesSingle = (again, rote) => {\n  const value = getValue();\n\n  if (value < 8) {\n    if (rote) {\n      return getSuccessesSingle(again, false);\n    } else {\n      return 0;\n    }\n  }\n\n  let successes = 1;\n\n  if (value >= again) {\n    successes += getSuccessesSingle(again, false);\n  }\n\n  return successes;\n};\n\nexport const getSuccesses = (dices, again, rote) => {\n  let successes = 0;\n  for (let index = 0; index < dices; index++) {\n    successes += getSuccessesSingle(again, rote);\n  }\n  return successes;\n};\n\n/*\nconst getExpectedSingleSampledUnmemoized = (again, samples) => {\n  let sum = 0\n  for (let index = 0; index < samples; index++) {\n    sum += getSuccessesSingle(again)\n  }\n  return sum / samples\n}\nwindow.test1 = getExpectedSingleSampledUnmemoized\n*/\n\nconst getExpectedSingle = (again, rote) => {\n  if (again < 8) {\n    throw new Error(\"again must be larger than or equal to 8\");\n  }\n\n  if (rote) {\n    // There is three dice \"areas\"\n    // The (failure) reroll area, which has the expected value of a non rote dice\n    // The (success) again area, which has the value of one + non rote dice\n    // The (success) only area, which has the value of one\n\n    const rerollArea = 7;\n    const againArea = 10 - again + 1;\n    const onlyArea = 10 - rerollArea - againArea;\n\n    const rerollValue = getExpectedSingle(again, false);\n    const againValue = 1 + getExpectedSingle(again, false);\n    const onlyValue = 1;\n\n    return (\n      (rerollValue * rerollArea) / 10 +\n      (againValue * againArea) / 10 +\n      (onlyValue * onlyArea) / 10\n    );\n  }\n\n  if (again >= 11) {\n    return 3 / 10;\n  }\n\n  return 3 / (again - 1);\n};\n\nexport const getExpected = (dices, again, rote) => {\n  const expectedSingle = getExpectedSingle(again, rote);\n  return expectedSingle * dices;\n};\n\nexport const getChance = (dices, rote) => {\n  if (rote) {\n    // You need to fail with all dices, then roll them all again and fail again.\n    // So in practice you need to fail with twice the dices\n    dices *= 2;\n  }\n  return 1 - Math.pow(0.7, dices);\n};\n","class LocalStorageAccessor {\n  constructor(key, initialValue) {\n    this.key = key;\n    this.initialValue = JSON.stringify(initialValue);\n  }\n\n  getInitial() {\n    return JSON.parse(this.initialValue);\n  }\n\n  get() {\n    const json = window.localStorage.getItem(this.key);\n    if (json === null || json === undefined) {\n      return this.getInitial();\n    }\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      return this.getInitial();\n    }\n  }\n\n  set(value) {\n    const json = JSON.stringify(value)\n    return window.localStorage.setItem(this.key, json);\n  }\n}\n\nexport default LocalStorageAccessor;\n","import React from \"react\";\nimport \"./App.scss\";\nimport * as DiceUtil from \"./DiceUtil\";\nimport LocalStorageAccessor from \"./LocalStorageAccessor\";\n\nconst STARTING_DICES = 4;\nconst STARTING_AGAIN = 10;\nconst STARTING_ROTE = false;\nconst STARTING_ROLL_ENABLED = true;\nconst STARTING_WILLPOWER_ENABLED = true;\nconst STARTING_SUCCESSES = 0;\nconst STARTING_WILLPOWER_SUCCESSES = 0;\nconst STARTING_PRESETS = [];\nconst STORAGE = new LocalStorageAccessor(\"storagev4\", {\n  dices: STARTING_DICES,\n  again: STARTING_AGAIN,\n  rote: STARTING_ROTE,\n  rollEnabled: STARTING_ROLL_ENABLED,\n  willpowerEnabled: STARTING_WILLPOWER_ENABLED,\n  successes: STARTING_SUCCESSES,\n  willpowerSuccesses: STARTING_WILLPOWER_SUCCESSES,\n  presets: STARTING_PRESETS\n});\n\n\nconst getChanceDescription = (chance) => {\n  return \"\" + Math.round(chance * 100) + \"%\";\n};\n\nconst getExpectedDescription = (expected) => {\n  return \"\" + Math.round(expected * 100) / 100;\n};\n\nclass App extends React.Component {\n  state = STORAGE.get();\n\n  edit = (editState) => {\n    this.setState(\n      editState,\n      this.saveState\n    );\n  }\n\n  editPreset = (presetState) => {\n    const { presets } = this.state;\n\n    const presetsAfter = presets.map(preset => {\n      if (preset.id === presetState.id) {\n        return Object.assign({}, preset, presetState);\n      } else {\n        return preset;\n      }\n    });\n\n    this.edit(\n      {\n        presets: presetsAfter,\n      }\n    );\n  }\n\n  addPreset = (presetState) => {\n    const { presets } = this.state;\n    const presetsAfter = [...presets, presetState];\n    this.edit(\n      {\n        presets: presetsAfter,\n      }\n    );\n  }\n\n  removePreset = (presetState) => {\n    const { presets } = this.state;\n    const presetsAfter = presets.filter(preset => preset.id !== presetState.id);\n    this.edit(\n      {\n        presets: presetsAfter,\n      }\n    );\n  }\n\n  saveState = () => {\n    STORAGE.set(this.state);\n  };\n\n  handleDicesChanged = (event) => {\n    const dices = event.target.value;\n    this.edit(\n      {\n        dices,\n        rollEnabled: STARTING_ROLL_ENABLED,\n        willpowerEnabled: STARTING_WILLPOWER_ENABLED,\n        successes: STARTING_SUCCESSES,\n        willpowerSuccesses: STARTING_WILLPOWER_SUCCESSES,\n      }\n    );\n  };\n\n  handleAgainChanged = (event) => {\n    const again = event.target.value;\n    this.edit(\n      {\n        again,\n        rollEnabled: STARTING_ROLL_ENABLED,\n        willpowerEnabled: STARTING_WILLPOWER_ENABLED,\n        successes: STARTING_SUCCESSES,\n        willpowerSuccesses: STARTING_WILLPOWER_SUCCESSES,\n      }\n    );\n  };\n\n  handleRoteChanged = (event) => {\n    const rote = event.target.checked;\n    this.edit(\n      {\n        rote,\n        rollEnabled: STARTING_ROLL_ENABLED,\n        willpowerEnabled: STARTING_WILLPOWER_ENABLED,\n        successes: STARTING_SUCCESSES,\n        willpowerSuccesses: STARTING_WILLPOWER_SUCCESSES,\n      }\n    );\n  };\n\n  handleClear = () => {\n    this.edit(\n      {\n        rollEnabled: STARTING_ROLL_ENABLED,\n        willpowerEnabled: STARTING_WILLPOWER_ENABLED,\n        successes: STARTING_SUCCESSES,\n        willpowerSuccesses: STARTING_WILLPOWER_SUCCESSES,\n      }\n    );\n  };\n\n  handleRoll = () => {\n    const { dices, again, rote, successes } = this.state;\n    const additionalSuccesses = DiceUtil.getSuccesses(dices, again, rote);\n    const targetSuccesses = successes + additionalSuccesses;\n    this.edit(\n      {\n        rollEnabled: false,\n        successes: targetSuccesses,\n      }\n    );\n  };\n\n  handleWillpower = () => {\n    const { again, rote, successes } = this.state;\n    const dices = 3;\n    const additionalSuccesses = DiceUtil.getSuccesses(dices, again, rote);\n    const targetSuccesses = successes + additionalSuccesses;\n    this.edit(\n      {\n        willpowerEnabled: false,\n        successes: targetSuccesses,\n        willpowerSuccesses: additionalSuccesses,\n      }\n    );\n  };\n\n  handlePresetAdd = () => {\n    const { dices, again, rote } = this.state;\n    const id = Date.now();\n    let name = `${dices} A${again}`;\n    if (rote) {\n      name += ' R';\n    }\n    const edit = false;\n    const preset = { id, name, dices, again, rote, edit };\n    this.addPreset(preset);\n  };\n\n  handlePresetEdit = ({ id }) => {\n    const edit = true;\n    this.editPreset(\n      {\n        id,\n        edit,\n      }\n    );\n  };\n\n  handlePresetLoad = ({ dices, again, rote }) => {\n    this.edit(\n      {\n        dices,\n        again,\n        rote,\n        rollEnabled: STARTING_ROLL_ENABLED,\n        willpowerEnabled: STARTING_WILLPOWER_ENABLED,\n        successes: STARTING_SUCCESSES,\n        willpowerSuccesses: STARTING_WILLPOWER_SUCCESSES,\n      }\n    );\n  };\n\n  render() {\n    const {\n      dices,\n      again,\n      rote,\n      rollEnabled,\n      willpowerEnabled,\n      successes,\n      willpowerSuccesses,\n      presets\n    } = this.state;\n\n    const chance = DiceUtil.getChance(dices, rote);\n    const expected = DiceUtil.getExpected(dices, again, rote);\n\n    const chanceDescription = getChanceDescription(chance);\n    const expectedDescription = getExpectedDescription(expected);\n\n    const tooltipDices = \"The amount of dices to be rolled.\";\n    const tooltipAgain =\n      \"Roll one more dice if the dice shows this value and above.\";\n    const tooltipRote =\n      \"Reroll all failed dice on the initial roll while not rerolling the results of that reroll, or the results of any 8, 9, or 10-again rerolls.\";\n    const tooltipChance = `The chance to get at least 1 success is ${chanceDescription} when rolling ${dices} dices.`;\n    const tooltipExpected = `The average amount of successes is ${expectedDescription} when rolling ${dices} dices with ${again}-again.`;\n\n    return (\n      <div className=\"App\">\n        <div className=\"holder\">\n          <div className=\"map\">\n            <div className=\"entry\">\n              <div className=\"key\" title={tooltipDices}>\n                Dices:\n              </div>\n              <div className=\"value\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={dices}\n                  onChange={this.handleDicesChanged}\n                />\n              </div>\n            </div>\n            <div className=\"entry\">\n              <div className=\"key\" title={tooltipAgain}>\n                Again:\n              </div>\n              <div className=\"value\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  min=\"8\"\n                  max=\"11\"\n                  value={again}\n                  onChange={this.handleAgainChanged}\n                />\n              </div>\n            </div>\n            <div className=\"entry\">\n              <div className=\"key\" title={tooltipRote}>\n                Rote:\n              </div>\n              <div className=\"value\">\n                <input\n                  className=\"input checkbox\"\n                  type=\"checkbox\"\n                  checked={rote}\n                  onChange={this.handleRoteChanged}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"stats\">\n            <div className=\"entry\" title={tooltipChance}>\n              <div className=\"key\">Chance:</div>\n              <div className=\"value\">{chanceDescription}</div>\n            </div>\n            <div className=\"entry\" title={tooltipExpected}>\n              <div className=\"key\">Expected:</div>\n              <div className=\"value\">{expectedDescription}</div>\n            </div>\n          </div>\n\n          <div className=\"buttons\">\n            <button className=\"button\" type=\"button\" onClick={this.handleClear}>\n              Clear\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.handleRoll}\n              disabled={rollEnabled ? \"\" : \"disabled\"}\n            >\n              Roll\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.handleWillpower}\n              disabled={willpowerEnabled ? \"\" : \"disabled\"}\n            >\n              Willpower\n            </button>\n          </div>\n\n          <div className=\"successes\">\n            {rollEnabled && willpowerEnabled ? \"?\" : successes}\n          </div>\n\n          \n          <div className=\"willpowerSuccesses\">\n            {!willpowerEnabled\n              ? (<>{willpowerSuccesses} from Willpower</>)\n              : (<>&nbsp;</>)\n            }\n          </div>\n          \n          <div className=\"presets\">\n            {presets.map(preset => {\n              const presetChance = DiceUtil.getChance(preset.dices, preset.rote);\n              const presetExpected = DiceUtil.getExpected(preset.dices, preset.again, preset.rote);\n\n              const presetChanceDescription = getChanceDescription(presetChance);\n              const presetExpectedDescription = getExpectedDescription(presetExpected);\n              const tooltipPreset = `Dices: ${preset.dices}\\nAgain: ${preset.again}\\nRote: ${preset.rote}\\nChance: ${presetChanceDescription}\\nExpected: ${presetExpectedDescription}\\n\\nLeft click to apply. Right click to edit name. Press ENTER, ESC or click elsewhere to save. Will be deleted if saving with empty name.`;\n\n              if (preset.edit) {\n                const handleChange = (e) => {\n                  this.editPreset(\n                    {\n                      id: preset.id,\n                      name: e.target.value,\n                    }\n                  );\n                };\n                const handleBlur = () => {\n                  if (preset.name !== '') {\n                    this.editPreset(\n                      {\n                        id: preset.id,\n                        edit: false,\n                      }\n                    );\n                  } else {\n                    this.removePreset(\n                      {\n                        id: preset.id,\n                      }\n                    );\n                  }\n                }\n                const handleKeyDown = (e) => {\n                  if (e.key === 'Escape' || e.key === 'Enter') {\n                    handleBlur();\n                  }\n                };\n                return (\n                  <input key={preset.id} className=\"preset\" type=\"text\" value={preset.name} onChange={handleChange} onKeyDown={handleKeyDown} onBlur={handleBlur} title={tooltipPreset} autoFocus/>\n                )\n              } else {\n                const handleClick = () => {\n                  this.handlePresetLoad(preset);\n                };\n                const onContextMenu = (e) => {\n                  e.preventDefault();\n                  this.handlePresetEdit(preset);\n                };\n                return (\n                  <button key={preset.id} className=\"preset\" type=\"button\" onClick={handleClick} onContextMenu={onContextMenu} title={tooltipPreset}>{preset.name}</button>\n                )\n              }\n            })}\n            <button className=\"preset\" type=\"button\" onClick={this.handlePresetAdd}>+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}